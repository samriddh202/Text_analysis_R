unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_bronte <- bronte1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_hgwells %>%
count(word, sort = TRUE)
tidy_bronte %>%
count(word, sort = TRUE)
tidy_hgwells %>%
count(word, sort = TRUE) %>%
filter(n > 400) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_bronte %>%
count(word, sort = TRUE) %>%
filter(n > 400) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
frequency_by_word_across_authors <- bind_rows(
mutate(tidy_bronte,author = "Bronte"),
mutate(tidy_hgwells, author = "Wells"),
mutate(tidy_books, author = "Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion)
frequency_by_word_across_authors
frequency <- frequency_by_word_across_authors %>%
gather(author, proportion, `Bronte`:`Wells`)
frequency
frequency %>% ggplot(aes(x = proportion,
y = `Austen`,
color = abs(`Austen` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5,
width = 0.3, height = 0.3) +
geom_text(aes(label = word),
check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4",
high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
df_Bronte <- frequency[frequency$author == "Bronte",]
df_Bronte
cor.test(data = df_Bronte, ~ proportion + `Austen`)
df_Wells <- frequency[frequency$author == "Wells",]
df_Wells
cor.test(data = df_Wells, ~ proportion + `Austen`)
mark_Twain<-gutenberg_works(author == "Twain, Mark")
mark_Twain1<-gutenberg_download(mark_Twain$gutenberg_id)
leo_tolstoy<-gutenberg_works(author == "Tolstoy, Leo, graf")
leo_tolstoy1<-gutenberg_download(leo_tolstoy$gutenberg_id)
charles_dickens<-gutenberg_works(author == "Dickens, Charles")
charles_dickens1<-gutenberg_download(charles_dickens$gutenberg_id)
tidy_twain <- mark_Twain1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_tolstoy <- leo_tolstoy1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_dickens <- charles_dickens1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_twain %>%
count(word, sort = TRUE)
tidy_tolstoy %>%
count(word, sort = TRUE)
tidy_dickens %>%
count(word, sort = TRUE)
tidy_twain %>%
count(word, sort = TRUE) %>%
filter(n > 1000) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_tolstoy %>%
count(word, sort = TRUE) %>%
filter(n > 1000) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_dickens %>%
count(word, sort = TRUE) %>%
filter(n > 1000) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
frequency_by_word_across_authors <- bind_rows(
mutate(tidy_twain,author = "Twain"),
mutate(tidy_tolstoy, author = "Tolstoy"),
mutate(tidy_dickens, author = "Dickens")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion)
frequency_by_word_across_authors
frequency <- frequency_by_word_across_authors %>%
gather(author, proportion, `Twain`:`Tolstoy`)
frequency
frequency %>% ggplot(aes(x = proportion,
y = `Dickens`,
color = abs(`Dickens` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5,
width = 0.3, height = 0.3) +
geom_text(aes(label = word),
check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4",
high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Charles Dickens", x = NULL)
df_Twain <- frequency[frequency$author == "Twain",]
df_Twain
cor.test(data = df_Twain, ~ proportion + `Dickens`)
df_Tolstoy <- frequency[frequency$author == "Tolstoy",]
df_Tolstoy
cor.test(data = df_Tolstoy, ~ proportion + `Dickens`)
Les_Miserables<- gutenberg_download(c(135))
A_Tale_of_Two_Cities<- gutenberg_download(c(98))
View(A_Tale_of_Two_Cities)
tidy_victor <- Les_Miserables %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
View(tidy_victor)
tidy_victor <- Les_Miserables %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_charles <- A_Tale_of_Two_Cities %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
bing_word_counts <- tidy_victor %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts <- tidy_victor %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts %>%
group_by(sentiment) %>%
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
bing_word_counts <- tidy_victor %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
bing_word_counts <- tidy_victor %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
bing_word_counts <- tidy_charles %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
bing_word_counts <- tidy_victor %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment Les Miserables",
x = NULL) +
coord_flip()
bing_word_counts <- tidy_charles %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts
bing_word_counts %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment A Tale of Two Cities",
x = NULL) +
coord_flip()
library(tidyverse)
library(tidytext)
library(janeaustenr)
library(stringr)
library(gutenbergr)
library(ggplot2)
library(dplyr)
library(scales)
hgwells<-gutenberg_works(author == "Wells, H. G. (Herbert George)")
hgwells1<-gutenberg_download(hgwells$gutenberg_id)
bronte<-gutenberg_works(str_detect(author, "BrontÃ«,"))
bronte1<-gutenberg_download(bronte$gutenberg_id)
orig_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text,
regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup() %>%
select(chapter, linenumber, everything())
tidy_books <- orig_books %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 400) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_hgwells <- hgwells1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_bronte <- bronte1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_hgwells %>%
count(word, sort = TRUE)
tidy_bronte %>%
count(word, sort = TRUE)
tidy_hgwells %>%
count(word, sort = TRUE) %>%
filter(n > 400) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_bronte %>%
count(word, sort = TRUE) %>%
filter(n > 400) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
frequency_by_word_across_authors <- bind_rows(
mutate(tidy_bronte,author = "Bronte"),
mutate(tidy_hgwells, author = "Wells"),
mutate(tidy_books, author = "Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion)
frequency_by_word_across_authors
frequency <- frequency_by_word_across_authors %>%
gather(author, proportion, `Bronte`:`Wells`)
frequency
frequency %>% ggplot(aes(x = proportion,
y = `Austen`,
color = abs(`Austen` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5,
width = 0.3, height = 0.3) +
geom_text(aes(label = word),
check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4",
high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
df_Bronte <- frequency[frequency$author == "Bronte",]
df_Bronte
cor.test(data = df_Bronte, ~ proportion + `Austen`)
df_Wells <- frequency[frequency$author == "Wells",]
df_Wells
cor.test(data = df_Wells, ~ proportion + `Austen`)
mark_Twain<-gutenberg_works(author == "Twain, Mark")
mark_Twain1<-gutenberg_download(mark_Twain$gutenberg_id)
leo_tolstoy<-gutenberg_works(author == "Tolstoy, Leo, graf")
leo_tolstoy1<-gutenberg_download(leo_tolstoy$gutenberg_id)
charles_dickens<-gutenberg_works(author == "Dickens, Charles")
charles_dickens1<-gutenberg_download(charles_dickens$gutenberg_id)
tidy_twain <- mark_Twain1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_tolstoy <- leo_tolstoy1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_dickens <- charles_dickens1 %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_twain %>%
count(word, sort = TRUE)
tidy_tolstoy %>%
count(word, sort = TRUE)
tidy_dickens %>%
count(word, sort = TRUE)
tidy_twain %>%
count(word, sort = TRUE) %>%
filter(n > 1000) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_tolstoy %>%
count(word, sort = TRUE) %>%
filter(n > 1000) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_dickens %>%
count(word, sort = TRUE) %>%
filter(n > 1000) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
frequency_by_word_across_authors <- bind_rows(
mutate(tidy_twain,author = "Twain"),
mutate(tidy_tolstoy, author = "Tolstoy"),
mutate(tidy_dickens, author = "Dickens")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion)
frequency_by_word_across_authors
frequency <- frequency_by_word_across_authors %>%
gather(author, proportion, `Twain`:`Tolstoy`)
frequency
frequency %>% ggplot(aes(x = proportion,
y = `Dickens`,
color = abs(`Dickens` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5,
width = 0.3, height = 0.3) +
geom_text(aes(label = word),
check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4",
high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Charles Dickens", x = NULL)
df_Twain <- frequency[frequency$author == "Twain",]
df_Twain
cor.test(data = df_Twain, ~ proportion + `Dickens`)
df_Tolstoy <- frequency[frequency$author == "Tolstoy",]
df_Tolstoy
cor.test(data = df_Tolstoy, ~ proportion + `Dickens`)
Les_Miserables<- gutenberg_download(c(135))
A_Tale_of_Two_Cities<- gutenberg_download(c(98))
tidy_victor <- Les_Miserables %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
tidy_charles <- A_Tale_of_Two_Cities %>%
unnest_tokens(word, text) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
anti_join(stop_words)
bing_word_counts1 <- tidy_victor %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts1
bing_word_counts1 %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment Les Miserables",
x = NULL) +
coord_flip()
bing_word_counts2 <- tidy_charles %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts2
bing_word_counts2 %>%
group_by(sentiment) %>%
top_n(81) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to sentiment A Tale of Two Cities",
x = NULL) +
coord_flip()
bing_with_joy <- get_sentiments("bing") %>%
filter(word == "joy")
bing_word_counts1 <- tidy_books %>%
inner_join(bing_with_joy) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts1
bing_with_joy <- get_sentiments("bing") %>%
filter(word == "joy")
bing_word_counts1 <- tidy_charles %>%
inner_join(bing_with_joy) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts1
bing_with_joy <- get_sentiments("bing") %>%
filter(word == "joy")
bing_word_counts1 <- tidy_charles %>%
inner_join(bing_with_joy) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts1
bing_word_counts2 <- tidy_victor %>%
inner_join(bing_with_joy) %>%
count(word, sentiment, sort = TRUE) %>%
ungroup()
bing_word_counts2
